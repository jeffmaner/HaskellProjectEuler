-- The sequence of triangle numbers is generated by adding the natural numbers.
-- So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first
-- ten terms would be:
-- 
-- 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
-- 
-- Let us list the factors of the first seven triangle numbers:
-- 
--     1: 1
--     3: 1,3
--     6: 1,2,3,6
--    10: 1,2,5,10
--    15: 1,3,5,15
--    21: 1,3,7,21
--    28: 1,2,4,7,14,28
--
-- We can see that 28 is the first triangle number to have over five divisors.
-- 
-- What is the value of the first triangle number to have over five hundred
-- divisors?

import Data.List (dropWhile, group)
import Primes (primeFactors)

main = do
  (putStr . show) problem12

triangle n = sum [1..n]

divisors n = filter (\m->n `mod` m == 0) [1..n]

problem12 = head $ dropWhile (\x->length x < 500) $ map divisors [1..]
-- Dreadfully slow. Killed it.

-- From greater minds than mine:
problem12' = head $ filter ((> 500) . nDivisors) triangleNumbers
  where nDivisors n = product $ map ((+1) . length) (group (primeFactors n))
        triangleNumbers = scanl1 (+) [1..]
-- 76576500.
