-- Consider all integer combinations of a^b for 2 <= a <= 5 and 2 <= b <= 5:
-- 
--     2^2= 4, 2^3=  8, 2^4= 16, 2^5=  32
--     3^2= 9, 3^3= 27, 3^4= 81, 3^5= 243
--     4^2=16, 4^3= 64, 4^4=256, 4^5=1024
--     5^2=25, 5^3=125, 5^4=625, 5^5=3125
-- 
-- If they are then placed in numerical order, with any repeats removed, we get
-- the following sequence of 15 distinct terms:
-- 
-- 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
-- 
-- How many distinct terms are in the sequence generated by a^b for 2 <= a <= 100
-- and 2 <= b <= 100?

import Control.Monad (liftM2)
import Data.List (group,nub,sort)
import Data.Set (fromList,size)

main = do print $ problem29''

problem29 = length $ nub [a^b|a<-[2..100], b<-[2..100]]
-- 9183. And just a few seconds to calculate. Why so much more complicated
-- answers?

problem29' = length . group . sort $ liftM2 (^) [2..100] [2..100]

-- Oh, this is good, though: The Set data structure can be used for a
-- significant speed increase.
problem29'' = size $ fromList [x^y | x <- [2..100], y <- [2..100]]
-- Umm, not really a significant speed increase...
