-- Each new term in the Fibonacci sequence is generated by adding the previous
-- two terms. By starting with 1 and 2, the first 10 terms will be:
-- 
-- 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
-- 
-- By considering the terms in the Fibonacci sequence whose values do not exceed
-- four million, find the sum of the even-valued terms.

main = do
    (putStr . show) problem2'
    -- 4613732.

problem2 = sum [x|x<-map fibonacci [1..4000000], x<4000000, x `mod` 2 == 0]

fibonacci n
  | n==1      = 1
  | n==2      = 2
  | otherwise = fibonacci (n-1) + fibonacci (n-2)

-- My solution takes too long to run. I killed it.

-- From greater minds than mine:
problem2' = sum [ x | x <- takeWhile (<= 4000000) fibs, even x]
  where fibs = 1 : 1 : zipWith (+) fibs (tail fibs)

-- A couple other solutions that take advantage of an algebraic property.
-- They're kind of convoluted. But they work for much larger numbers.
